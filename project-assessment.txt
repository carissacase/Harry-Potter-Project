PROJECT ASSESSMENT: HARRY POTTER AND THE GOBLET OF FIRE
Dr. Campbell, December 18, 2021

This project began with a clearly-defined goal: comparing the movie script and original novel text of Harry Potter and the Goblet of Fire. (This was the only one of the Potter franchise where the team was able to find both an e-text of the novel and a usable, non-copyright-restricted version of the movie script.) One inevitable complication was that the novel text had to be marked up for analysis, but it could not be placed on the public repo without violating copyright. As such it had to be passed back and forth through a different file-sharing service.

Because the project included both the novel and the script, the volume of text to be marked up was large. Some of the fundamental regex on the novel was done by Dr. Campbell to get the ball rolling. In theory, it would have been desirable, in the novel markup, to tag each individual line of dialogue with its speaker, but that could not be done with regex as it could for the movie, since the identity of the speaker in dialogue often has to be inferred by a human reader. There simply was not enough time to hand-tag all the speech elements this way. If a future team wants to work on this, that would be a fruitful way to enable further analysis of the novel text. (Of course, again, the markup of the text cannot be stored on the repo.)

Comparing story arcs is always difficult, and ultimately might be better served by graphics (as taught in Coding and Data Visualization) than by text-based means. The team did create links from the Chapter Analysis page to the Movie Script page. It would have been good to work the other direction too: some kind of link from the movie scene to the book chapter (or, better yet, section of a chapter: the chapter sections were never individually tagged in the book xml) so a user could easily find the actual page in a hard-copy book corresponding to any scene in the movie. This could have been done in a basic way, scene to chapter, as a reverse of the chapter to scene links already established; that would have taken little time. A more advanced and precise correlation would have taken much more time, and this too could be part of any future work on this project.

On the Movie Script page, one missed opportunity was to highlight spells and creatures. These were all tagged in the underlying XML; even the spell type was tagged. A little CSS work with <span class=""> could have made these pop out in the script. (The XML tagging was not wasted, in that this allowed for scene-by-scene and chapter-by-chapter lists of creatures, characters, and spells in the Analysis pages, about which more in a moment.) If we had had time to cover JavaScript this semester, users could have toggled the color-coding on and off. Another way that comparison could have been done, within and between the two sources, was to look at the Hogwarts House affiliations of characters and measure the relative prevalence of houses. This is not a fault as such, just a note of where further work could go.

The XSLT stylesheets for creating the Analysis pages are where the project really comes into its own, and they represent team members coming into their own and gaining confidence with the language. This is the apex of the course, and it shows a challenge successfully achieved. There is some discussion of this on the Methodology page. With a little extra time and effort, but without needing fundamentally different skills, an index could have been made to work in reverse: list the creatures (etc.) and identify the scenes/chapters in which they appear.

The HTML and CSS for the site are more basic. Given time constraints, I (Dr. Campbell) made the decision to encourage two members of the team to focus more on the XSLT and a third to work on the CSS. There was an unsuccessful, last-minute attempt to create and add an SVG of character speech counts in the script; no doubt this could have been pulled off if started a bit earlier and carried out with more consultation with the instructor or student instructor. The header and navbar also are not correctly copied across all of the pages. There are still some unused html pages and XSLT stylesheets that need to be purged from the repo or at least sequestered in a folder out of the way of the working parts of the site. When the navbar was added to the pages, or updated on them (other than Index), it was done by pasting it directly into the HTML, even on the pages that were generated by XSLT; it should have been written into the XSLT so it would pop up automatically in the HTML, and the HTML should have been generated afresh and pushed to the repo. This means that any subsequent attempts to tinker with the stylesheets, perhaps by a different team, will generate HTML pages that either lack the navbar or have a navbar with errors in it. No doubt it was done this way because it was unfinished business left to (literally) the eleventh hour.

Thus while the project has some wrinkles that were not ironed out in the final push, it was on the whole a well-conceived project. It also leaves a legacy in two ways: both a project that shows how to use XSLT to create analytical lists from a script, which other future projects might adapt; and a body of markup that would allow a future team to ask new and interesting questions. I very much hope that they will.